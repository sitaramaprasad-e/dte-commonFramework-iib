def remote = [:]
remote.name = 'cvs.ad.prolifics.com'
remote.host = 'cvs.ad.prolifics.com'
remote.allowAnyHosts = true
withCredentials([sshUserPrivateKey(credentialsId: 'esbci4', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
			remote.user = userName
			remote.identityFile = identity
			sshPut remote: remote, from: 'jenkins', into: './jenkins.worked'
		}
properties([
        parameters([
            string(name: 'QMNAME', defaultValue: 'PBCTEST', description: 'Enter the QM Name')
        ])
    ]) 

pipeline {
   	agent any
	stages{
		stage('Checkout Code'){
           	 steps {
              	  checkout([$class: 'GitSCM', branches: [[name: '*/feature']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'load']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/sitaramaprasad-e/dte-commonFramework-iib.git']]])
          	  }
          
       } 
      
     
		stage('Remote SSH to MQ Server') {
		steps{
			sshCommand remote: remote, command: 'ls -ltr'
			sshCommand remote: remote, command: 'for i in {1..5}; do echo -n \"Loop \$i \"; date ; sleep 1; done'
		   	sshPut remote: remote, from: './MQ/deploymq.sh', into: '.'
			sshScript remote: remote, script: "./MQ/deploymq.sh ${QMNAME}"
			sshRemove remote: remote, path: "deploymq.sh"
		}
            }
	      }
	      
}
