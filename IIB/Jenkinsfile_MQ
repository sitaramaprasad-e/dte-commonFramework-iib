def remote = [:]
remote.name = 'cvs.ad.prolifics.com'
remote.host = 'cvs.ad.prolifics.com'
remote.allowAnyHosts = true
withCredentials([sshUserPrivateKey(credentialsId: 'iibadm', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')])
         {
			remote.user = userName
			remote.identityFile = identity
		}

pipeline {
   	agent any
	stages{
		stage('Checkout Code'){
           	 steps {
              	  checkout([$class: 'GitSCM', branches: [[name: '*/feature']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'load']], submoduleCfg: [], userRemoteConfigs: [[url: 'git@github.com:dteenergy/esb-pf-common-retryFramework-iib.git']]])
          	  }
          
       } 
       stage('MQ'){
       		steps{
     			sshagent(['esbci']) {
			    sh 'ssh iibadm@10.0.10.160 ". /INT/usr/mqm/bin/setmqenv -s; cd /home/esbci; ls"'
    			}
		}
       }
		//stage('Remote SSH') {
		//steps{
			//writeFile file: 'abc.sh', text: 'ls'
			//sshCommand remote: remote, command: 'for i in {1..5}; do echo -n \"Loop \$i \"; date ; sleep 1; done'
		   	//sshPut remote: remote, from: '/var/lib/jenkins/workspace/esb-pf-common-retryFramework-iib-mqtest/MQ/deploymq.sh', into: '.'
		//	sshPut remote: remote, from: '/var/lib/jenkins/workspace/esb-pf-common-retryFramework-iib-mqtest/abc.sh', into: '.'
		    	//sshCommand remote: remote, command: "chmod +x deploymq.sh"
			//sshPut remote: remote, from: 'abc.sh', into: '.'
			//sshGet remote: remote, from: 'abc.sh', into: 'bac.sh', override: true
		//	sshScript remote: remote, script: "abc.sh"
			//sshScript remote: remote, script: "test1.sh"
			//sshScript remote: remote, script: "./MQ/deploymq.sh"
		//}
            // }
	      }
	      
}
