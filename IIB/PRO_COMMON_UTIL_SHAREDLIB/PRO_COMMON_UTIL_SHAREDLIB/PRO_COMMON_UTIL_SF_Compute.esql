BROKER SCHEMA PRO_COMMON_UTIL_SHAREDLIB
DECLARE nsTIDMsg NAMESPACE 'com.prolifics.iib.transactionids';
/****************************************************************************************
 * External Variables initialization:													
 * udpPropertyPath	: Properties file path			    
 * udpServiceVersion: Current service version						    
 * udpSourceSystem	: Source System/Application which sends message to this service		
 * udpTargetSystem	: Target System/Application which receives message from this service
 * udpMessageType	: Input message type in MQMD properties(Request, Reply, Datagram, etc...)										
 ****************************************************************************************/
DECLARE udpServiceVersion EXTERNAL CHARACTER '';
DECLARE udpSourceSystem EXTERNAL CHARACTER '';
DECLARE udpTargetSystem EXTERNAL CHARACTER '';
DECLARE udpMessageType EXTERNAL CHARACTER '';
DECLARE udpInterfaceNo EXTERNAL CHARACTER '';
DECLARE udpMaxRetry EXTERNAL INTEGER 0;

/*****************************
 Global Variable Declaration
 ****************************/
DECLARE inCCSID INTEGER 1208;
CREATE COMPUTE MODULE PRO_COMMON_UTIL_SF_FlowInitializer
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		CALL CopyTransactionIds();
		
		DECLARE varLocalTxId CHARACTER SUBSTRING(CAST(InputRoot.MQMD.MsgId AS CHAR) FROM 3 FOR 48);
		DECLARE varParentTxId CHARACTER COALESCE(InputRoot.MQRFH2.usr.ParentTrxID,'NOT SET');
		DECLARE varTrackingIds CHARACTER 'LocalTxId:'||varLocalTxId||'::ParentTxId:'||varParentTxId||': ';
		
		/* Copy entire inputroot to outputroot*/
			SET OutputRoot = InputRoot;
			SET OutputLocalEnvironment = InputLocalEnvironment;
			SET Environment.Variables.AppData.LocalTxId = InputRoot.MQMD.MsgId;
			SET Environment.Variables.AppData.ParentTrxID = InputRoot.MQRFH2.usr.ParentTrxID;
			SET Environment.Variables.AppData.MaxRetry = udpMaxRetry;
			SET Environment.Variables.AppData.CurrentRetry = 0;
			
			/* Set metadata for the incoming message*/
			CALL com.prolifics.commonfunctions.pInitializeMetaData(InputRoot, Environment);
			
			/* Set Log4j Start Statement*/
			CALL pSetLog4jStmt('START',InputRoot);
				
		RETURN TRUE;
	END;

	/*******************************************************************
* Procedure Name	: pSetLog4jStmt
* Parameters		: 
* 	StmtType		: Start/End Log4j Event
*	RootRef			: InputRoot/OutputRoot reference
* Description 		: Writes the logs into Log4j file
*******************************************************************/
CREATE PROCEDURE pSetLog4jStmt(IN StmtType CHARACTER, IN RootRef REFERENCE) BEGIN
 SET Environment.TEMP = NULL;
 SET OutputLocalEnvironment = InputLocalEnvironment;
	
END;
	
	/***********************************************************************************************
	 *  Node Name		:	CopyTransactionIds
	 *  Module Name		:	PRO_COMMON_UTIL_SF_FlowInitializer
	 *  Description		:	This module initializes all the required transaction ids in Environment variables.
	 						This data/X-path is used in monitorng profiles.
	 *  Version History	:										
	 *  Version	Date		Author				Comments
	 *  =======	==========	==================	============
	 *  1.0		06/25/2018	Tulasikanth Seelam	First Version
	 ***********************************************************************************************/
	CREATE PROCEDURE CopyTransactionIds() BEGIN
		CREATE LASTCHILD OF Environment DOMAIN 'XMLNSC' NAMESPACE nsTIDMsg NAME 'TransactionIdsMsg';  
		SET Environment.nsTIDMsg:TransactionIdsMsg.LocalTransId 	= InputRoot.MQMD.MsgId;
		SET Environment.nsTIDMsg:TransactionIdsMsg.ParentTransId 	= InputRoot.MQRFH2.usr.ParentTrxID;
	END;
END MODULE;